name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    # üß± Th√™m MongoDB th·∫≠t l√†m service ch·∫°y song song
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        # ‚úÖ S·ª≠a healthcheck d√πng mongosh (c√°ch 1 theo g·ª£i √Ω c·ªßa Copilot)
        options: >-
          --health-cmd "mongosh --quiet --eval \"db.adminCommand({ ping: 1 })\""
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - uses: actions/checkout@v4

      # -------------------------------------------------------
      # 1Ô∏è‚É£ C·∫•u h√¨nh Node.js cho to√†n pipeline
      # -------------------------------------------------------
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # -------------------------------------------------------
      # 2Ô∏è‚É£ restaurant-service: setup cache + install + test
      # -------------------------------------------------------
      - name: Setup Node.js cache for restaurant-service
        uses: actions/cache@v4
        with:
          path: ./backend/restaurant-service/node_modules
          key: ${{ runner.os }}-restaurant-${{ matrix.node-version }}-${{ hashFiles('./backend/restaurant-service/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-restaurant-${{ matrix.node-version }}-

      - name: Install dependencies for restaurant-service
        working-directory: ./backend/restaurant-service
        run: npm ci

      # üß© Ch·∫°y test v·ªõi MongoDB th·∫≠t (th√¥ng qua bi·∫øn m√¥i tr∆∞·ªùng)
      # ‚úÖ C√≥ th·ªÉ th√™m b∆∞·ªõc ch·ªù MongoDB n·∫øu c·∫ßn (t√πy ch·ªçn)
      - name: Run tests for restaurant-service
        working-directory: ./backend/restaurant-service
        env:
          MONGODB_URI: mongodb://localhost:27017/testdb
        run: npm test

      # -------------------------------------------------------
      # 3Ô∏è‚É£ frontend: setup cache + install + test
      # -------------------------------------------------------
      - name: Setup Node.js cache for frontend
        uses: actions/cache@v4
        with:
          path: ./frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ matrix.node-version }}-${{ hashFiles('./frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-${{ matrix.node-version }}-

      - name: Install dependencies for frontend
        working-directory: ./frontend
        run: npm ci

      - name: Run tests for frontend
        working-directory: ./frontend
        run: npm test
